max_obstacle_height: 0.60 
obstacle_range: 2.5 #2.5 The "obstacle_range" parameter determines the 
#maximum range sensor reading that will result in an obstacle being put into the costmap.
raytrace_range: 3.5 #The "raytrace_range"(traccia del raggio) parameter determines the range 
#to which we will raytrace freespace given a sensor reading.

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)

#footprint: [[-0.315, -0.315], [-0.315, 0.315], [0.123, 0.315], [0.123, -0.315]]
robot_radius: 0.315
inflation_radius: 0.7  #0.65 max. distance from an obstacle at which costs are incurred for planning paths.
cost_scaling_factor: 5  #5 exponential rate at which the obstacle cost drops off (default: 10)

# voxel map configuration; z-voxels 0 are filled by bumpers and 1 by laser scan (kinect)

map_type: costmap
transform_tolerance: 5 # seconds


origin_z: 0.0
z_resolution: 0.2
z_voxels: 2
publish_voxel_map: false

observation_sources: scan 
#observation_sources: scan

# scan: {data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.25, max_obstacle_height: 0.35}
# Our lasers (Xtion and fake) either needs to publish a height, or set min_obstacle_height to 0.0:
# http://wiki.ros.org/navigation/Troubleshooting#Missing_Obstacles_in_Costmap2D
# Note taht the max_obstacle_height is very important too!

scan: {data_type: LaserScan, topic: /laser/scan, marking: true, clearing: true, min_obstacle_height: 0.0, max_obstacle_height: 2}

#scan: {sensor_frame: base_scan, data_type: LaserScan, topic: /laser/scan, marking: true, clearing: true}

